<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="it">
  <compounddef id="_difensiva_8c" kind="file" language="C++">
    <compoundname>Difensiva.c</compoundname>
    <includes refid="_difensiva_8h" local="yes">Difensiva.h</includes>
    <includes refid="_gestione___file_8h" local="yes">Gestione_File.h</includes>
    <incdepgraph>
      <node id="1">
        <label>Difensiva.c</label>
        <link refid="_difensiva_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Difensiva.h</label>
        <link refid="_difensiva_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>Gestione_File.h</label>
        <link refid="_gestione___file_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>header.h</label>
        <link refid="_header_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>Pila.h</label>
        <link refid="_pila_8h"/>
      </node>
      <node id="8">
        <label>conio.h</label>
      </node>
      <node id="9">
        <label>ctype.h</label>
      </node>
      <node id="7">
        <label>stdbool.h</label>
      </node>
      <node id="4">
        <label>stdio.h</label>
      </node>
      <node id="5">
        <label>stdlib.h</label>
      </node>
      <node id="6">
        <label>string.h</label>
      </node>
      <node id="10">
        <label>time.h</label>
      </node>
      <node id="11">
        <label>unistd.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="_difensiva_8c_1a4d0e9ca878fb09a4a6cc6cc96ccbb402" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool valida_nome_file</definition>
        <argsstring>(const char *nomeFile)</argsstring>
        <name>valida_nome_file</name>
        <param>
          <type>const char *</type>
          <declname>nomeFile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>valida_nome_file <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*nomeFile</parametername>
</parameternamelist>
<parameterdescription>
<para>e&apos;un puntatore a carattere,esso rappresenta il nome del file </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true se il nome del file rispetta la dimensione e non presenta caratteri non ammessi </para>
</simplesect>
<simplesect kind="return"><para>false se il nome del file non rispetta la dimensione e/o i caratteri non ammessi </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/franc/Desktop/ESAME 1.0/ESAME 1.0/Difensiva.c" line="22" column="6" bodyfile="C:/Users/franc/Desktop/ESAME 1.0/ESAME 1.0/Difensiva.c" bodystart="22" bodyend="36"/>
        <references refid="_header_8h_1adb6bba367ed4fc2c16ca58de84a34447" compoundref="_header_8h" startline="28">SIZE_NOME_FILE</references>
      </memberdef>
      <memberdef kind="function" id="_difensiva_8c_1ac22614fc21d2aa50d1d5a9b24981481d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool valida_estensione_file</definition>
        <argsstring>(const char *nome_file)</argsstring>
        <name>valida_estensione_file</name>
        <param>
          <type>const char *</type>
          <declname>nome_file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>valida_estensione_file <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*nome_file</parametername>
</parameternamelist>
<parameterdescription>
<para>e&apos;un puntatore a carattere,esso rappresenta il nome del file </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para>nome_file e&apos;una stringa non nulla </para>
</simplesect>
<simplesect kind="return"><para>1 se il file ha estensione .txt </para>
</simplesect>
<simplesect kind="return"><para>0 se il file non presenta l&apos;estensione </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/franc/Desktop/ESAME 1.0/ESAME 1.0/Difensiva.c" line="45" column="6" bodyfile="C:/Users/franc/Desktop/ESAME 1.0/ESAME 1.0/Difensiva.c" bodystart="45" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="_difensiva_8c_1a794ce04c28daadf80d72788064d326aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool validatore_file</definition>
        <argsstring>(const char *nomeFile)</argsstring>
        <name>validatore_file</name>
        <param>
          <type>const char *</type>
          <declname>nomeFile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>validatore_file <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*nomeFile</parametername>
</parameternamelist>
<parameterdescription>
<para>e&apos;un puntatore a carattere,esso rappresenta il nome del file </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para>nome_file e&apos; una stringa non nulla </para>
</simplesect>
<simplesect kind="return"><para>true se il nome del file presenta un nome corretto,se l&apos;estensione e il percorso file sono corretti </para>
</simplesect>
<simplesect kind="return"><para>false se il nome del file non presenta un nome corretto, se l&apos; estensione e il percorso file non sono corretti </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>Verifica nomeFile e che l&apos;estensione del file sia .txt</para>
<para>Valida Estensione File</para>
<para>Se il percorso del file fornito e&apos; corretto, allora verifico la sua esistenza effettiva</para>
        </inbodydescription>
        <location file="C:/Users/franc/Desktop/ESAME 1.0/ESAME 1.0/Difensiva.c" line="63" column="6" bodyfile="C:/Users/franc/Desktop/ESAME 1.0/ESAME 1.0/Difensiva.c" bodystart="63" bodyend="85"/>
        <references refid="_gestione___file_8c_1a1168eb7135f375e52e8bd2647f5aceaa" compoundref="_gestione___file_8c" startline="29" endline="36">apriFile</references>
        <references refid="_difensiva_8c_1ac22614fc21d2aa50d1d5a9b24981481d" compoundref="_difensiva_8c" startline="45" endline="54">valida_estensione_file</references>
        <references refid="_difensiva_8c_1a4d0e9ca878fb09a4a6cc6cc96ccbb402" compoundref="_difensiva_8c" startline="22" endline="36">valida_nome_file</references>
      </memberdef>
      <memberdef kind="function" id="_difensiva_8c_1ab7ecab88c7b5e55dd6ff92b6e8a8ee57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rimuoviNewline</definition>
        <argsstring>(char *stringa)</argsstring>
        <name>rimuoviNewline</name>
        <param>
          <type>char *</type>
          <declname>stringa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>rimuoviNewline <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">stringa</parametername>
</parameternamelist>
<parameterdescription>
<para>e&apos; un puntatore a carattere ,essa rappresenta una stringa non formattata dal &apos;-&apos; </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para>stringa non e&apos; nulla </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/franc/Desktop/ESAME 1.0/ESAME 1.0/Difensiva.c" line="91" column="6" bodyfile="C:/Users/franc/Desktop/ESAME 1.0/ESAME 1.0/Difensiva.c" bodystart="91" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="_difensiva_8c_1a631d4f696e52cb1c67a3756a7fa86fd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * controlloStringa</definition>
        <argsstring>(char *stringa)</argsstring>
        <name>controlloStringa</name>
        <param>
          <type>char *</type>
          <declname>stringa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>controlloStringa <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">stringa</parametername>
</parameternamelist>
<parameterdescription>
<para>e&apos; un puntatore a carattere,essa rappresenta una stringa non formattata dal &apos;-&apos; </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para>stringa non e&apos; nulla </para>
</simplesect>
<simplesect kind="return"><para>viene restituita una stringa puntatore a carattere quando la stringa viene inserita correttamente </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/franc/Desktop/ESAME 1.0/ESAME 1.0/Difensiva.c" line="106" column="6" bodyfile="C:/Users/franc/Desktop/ESAME 1.0/ESAME 1.0/Difensiva.c" bodystart="106" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="_difensiva_8c_1a5fee0100cdbdb4d08c2186c1762ce801" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pulisciFile</definition>
        <argsstring>(const char *nomeFile)</argsstring>
        <name>pulisciFile</name>
        <param>
          <type>const char *</type>
          <declname>nomeFile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>pulisciFile <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*nomeFile</parametername>
</parameternamelist>
<parameterdescription>
<para>e&apos; un puntatore a carattere ,esso rappresenta il nome del file </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para>il nome del file non e&apos; nullo </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/franc/Desktop/ESAME 1.0/ESAME 1.0/Difensiva.c" line="143" column="6" bodyfile="C:/Users/franc/Desktop/ESAME 1.0/ESAME 1.0/Difensiva.c" bodystart="143" bodyend="149"/>
        <references refid="_gestione___file_8c_1a70e54fed9441b5a1967a8b7ae25611aa" compoundref="_gestione___file_8c" startline="45" endline="50">chiudiFile</references>
        <references refid="_difensiva_8c_1a794ce04c28daadf80d72788064d326aa" compoundref="_difensiva_8c" startline="63" endline="85">validatore_file</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Questo file include tutte le implementazioni riguardanti la programmazione difensiva. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="version"><para>1.0.0 </para>
</simplesect>
<simplesect kind="date"><para>06/07/2023 </para>
</simplesect>
<simplesect kind="authors"><para>Calabrese Lorenzo </para>
</simplesect>
<simplesect kind="authors"><para>Cappelluti Claudia Antonia </para>
</simplesect>
<simplesect kind="authors"><para>Conforti Francesco </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_difensiva_8h" kindref="compound">Difensiva.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_gestione___file_8h" kindref="compound">Gestione_File.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="_difensiva_8c_1a4d0e9ca878fb09a4a6cc6cc96ccbb402" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_difensiva_8c_1a4d0e9ca878fb09a4a6cc6cc96ccbb402" kindref="member">valida_nome_file</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*nomeFile){</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Verifica<sp/>la<sp/>lunghezza<sp/>del<sp/>nome<sp/>del<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strlen(nomeFile)<sp/>&gt;<sp/><ref refid="_header_8h_1adb6bba367ed4fc2c16ca58de84a34447" kindref="member">SIZE_NOME_FILE</ref>){</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Verifica<sp/>la<sp/>presenza<sp/>di<sp/>caratteri<sp/>non<sp/>ammessi</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*caratteriNonAmmessi<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;:*?\&quot;&lt;&gt;|&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>strlen(caratteriNonAmmessi);<sp/>i++){</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strchr(nomeFile,<sp/>caratteriNonAmmessi[i])<sp/>!=<sp/>NULL){</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="_difensiva_8c_1ac22614fc21d2aa50d1d5a9b24981481d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_difensiva_8c_1ac22614fc21d2aa50d1d5a9b24981481d" kindref="member">valida_estensione_file</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*nome_file){</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Verifica<sp/>che<sp/>l&apos;estensione<sp/>del<sp/>file<sp/>sia<sp/>.txt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*estensione<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;.txt&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*punto<sp/>=<sp/>strrchr(nome_file,<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(punto<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(strcmp(punto,<sp/>estensione)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="_difensiva_8c_1a794ce04c28daadf80d72788064d326aa" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_difensiva_8c_1a794ce04c28daadf80d72788064d326aa" kindref="member">validatore_file</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*nomeFile){</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>flagValiditaFile<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="_difensiva_8c_1a4d0e9ca878fb09a4a6cc6cc96ccbb402" kindref="member">valida_nome_file</ref>(nomeFile)){</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/>Nome<sp/>del<sp/>file<sp/>non<sp/>valido.<sp/>Assicurati<sp/>di<sp/>inserire<sp/>un<sp/>file<sp/>con<sp/>un<sp/>nome<sp/>corretto.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flagValiditaFile<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="_difensiva_8c_1ac22614fc21d2aa50d1d5a9b24981481d" kindref="member">valida_estensione_file</ref>(nomeFile)){</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/>Estensione<sp/>del<sp/>file<sp/>non<sp/>valida.<sp/>Assicurati<sp/>di<sp/>inserire<sp/>un<sp/>file<sp/>.txt.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flagValiditaFile<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flagValiditaFile){</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*file;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_gestione___file_8c_1a1168eb7135f375e52e8bd2647f5aceaa" kindref="member">apriFile</ref>(nomeFile,<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">,<sp/>&amp;file)<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/>Il<sp/>file<sp/>da<sp/>lei<sp/>specificato<sp/>e&apos;<sp/>inesistente.<sp/>Assicurati<sp/>di<sp/>inserire<sp/>il<sp/>percorso<sp/>corretto.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flagValiditaFile<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>flagValiditaFile;</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91" refid="_difensiva_8c_1ab7ecab88c7b5e55dd6ff92b6e8a8ee57" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_difensiva_8c_1ab7ecab88c7b5e55dd6ff92b6e8a8ee57" kindref="member">rimuoviNewline</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>stringa)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>strlen(stringa);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>stringa[len<sp/>-<sp/>1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stringa[len<sp/>-<sp/>1]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="_difensiva_8c_1a631d4f696e52cb1c67a3756a7fa86fd7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="_difensiva_8c_1a631d4f696e52cb1c67a3756a7fa86fd7" kindref="member">controlloStringa</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>stringa)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scelta<sp/>=<sp/>0,<sp/>conferma<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Sei<sp/>sicuro<sp/>di<sp/>aver<sp/>inserito<sp/>la<sp/>stringa<sp/>corretta?\n1)<sp/>per<sp/>confermare\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;2)<sp/>per<sp/>modificare\nScrivi<sp/>qui<sp/>--&gt;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanf(</highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>&amp;scelta);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(scelta)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stringa;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Inserisci<sp/>la<sp/>nuova<sp/>stringa:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fflush(stdin);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanf(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>stringa);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Vuoi<sp/>confermare<sp/>la<sp/>modifica?\n1)<sp/>per<sp/>confermare\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;2)<sp/>per<sp/>annullare\nScrivi<sp/>qui<sp/>--&gt;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanf(</highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>&amp;conferma);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;|ERRORE|<sp/>-<sp/>Scelta<sp/>%d<sp/>non<sp/>consentita\n&quot;</highlight><highlight class="normal">,<sp/>scelta);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(conferma==2){</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scelta<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(scelta<sp/>!=<sp/>1<sp/>&amp;&amp;<sp/>scelta<sp/>!=<sp/>2);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stringa;</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="_difensiva_8c_1a5fee0100cdbdb4d08c2186c1762ce801" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_difensiva_8c_1a5fee0100cdbdb4d08c2186c1762ce801" kindref="member">pulisciFile</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>nomeFile){</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE*<sp/>file;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_difensiva_8c_1a794ce04c28daadf80d72788064d326aa" kindref="member">validatore_file</ref>(nomeFile)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file<sp/>=<sp/>fopen(nomeFile,<sp/></highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_gestione___file_8c_1a70e54fed9441b5a1967a8b7ae25611aa" kindref="member">chiudiFile</ref>(file);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/franc/Desktop/ESAME 1.0/ESAME 1.0/Difensiva.c"/>
  </compounddef>
</doxygen>
