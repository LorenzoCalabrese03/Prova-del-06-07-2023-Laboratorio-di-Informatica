<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="it">
  <compounddef id="_funzioni_8c" kind="file" language="C++">
    <compoundname>Funzioni.c</compoundname>
    <includes refid="_header_8h" local="yes">header.h</includes>
    <includes refid="_funzioni_8h" local="yes">Funzioni.h</includes>
    <includes local="yes">InputOutput.h.</includes>
    <includes refid="_pila_8h" local="yes">Pila.h</includes>
    <incdepgraph>
      <node id="1">
        <label>Funzioni.c</label>
        <link refid="_funzioni_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>Funzioni.h</label>
        <link refid="_funzioni_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>header.h</label>
        <link refid="_header_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>Pila.h</label>
        <link refid="_pila_8h"/>
      </node>
      <node id="13">
        <label>InputOutput.h.</label>
      </node>
      <node id="7">
        <label>conio.h</label>
      </node>
      <node id="8">
        <label>ctype.h</label>
      </node>
      <node id="6">
        <label>stdbool.h</label>
      </node>
      <node id="3">
        <label>stdio.h</label>
      </node>
      <node id="4">
        <label>stdlib.h</label>
      </node>
      <node id="5">
        <label>string.h</label>
      </node>
      <node id="9">
        <label>time.h</label>
      </node>
      <node id="10">
        <label>unistd.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="_funzioni_8c_1a58bad8ca508eebb0e11542f293215213" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_pila" kindref="compound">Pila</ref> *</type>
        <definition>Pila * sostituisci</definition>
        <argsstring>(Pila **pila, const char *elementoDaSostituire, const char *nuovoElemento)</argsstring>
        <name>sostituisci</name>
        <param>
          <type><ref refid="struct_pila" kindref="compound">Pila</ref> **</type>
          <declname>pila</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>elementoDaSostituire</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>nuovoElemento</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sostituisci <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*pila</parametername>
</parameternamelist>
<parameterdescription>
<para>e&apos;un puntatore alla struct <ref refid="struct_pila" kindref="compound">Pila</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*elementoDaSostituire</parametername>
</parameternamelist>
<parameterdescription>
<para>e&apos;un puntatore a carattere </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*nuovoElemento</parametername>
</parameternamelist>
<parameterdescription>
<para>e&apos; un puntatore a carattere </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para>la pila e&apos; nulla </para>
</simplesect>
<simplesect kind="return"><para>restituisce una nuova pila con le dovute sostituzioni </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/franc/Desktop/ESAME 1.0/ESAME 1.0/Funzioni.c" line="28" column="6" bodyfile="C:/Users/franc/Desktop/ESAME 1.0/ESAME 1.0/Funzioni.c" bodystart="28" bodyend="64"/>
        <references refid="struct_pila_1aa51f190825baa5e4b80aa3a80d06b2ce" compoundref="_pila_8h" startline="24">Pila::dato</references>
        <references refid="_input_output_8c_1aa8565c0396f63828505d9beb65719849" compoundref="_input_output_8c" startline="65" endline="190">gestoreScelta</references>
        <references refid="struct_pila_1a1885e0e21f2563f74f2a71c5072bff21" compoundref="_pila_8h" startline="25">Pila::nextPtr</references>
      </memberdef>
      <memberdef kind="function" id="_funzioni_8c_1a655f67b2984bff476d1f97750a5764d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int contaAlfanumerico</definition>
        <argsstring>(const char *str)</argsstring>
        <name>contaAlfanumerico</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>contaAlfanumerico <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*str</parametername>
</parameternamelist>
<parameterdescription>
<para>e&apos; un puntatore a carattere </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para>la stringa non deve essere nulla </para>
</simplesect>
<simplesect kind="return"><para>restituisce il numero di caratteri alfanumerici </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/franc/Desktop/ESAME 1.0/ESAME 1.0/Funzioni.c" line="72" column="5" bodyfile="C:/Users/franc/Desktop/ESAME 1.0/ESAME 1.0/Funzioni.c" bodystart="72" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="_funzioni_8c_1ae386eaa89c4fb31c0159d9e2dc54c97a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int contaNumeri</definition>
        <argsstring>(const char *str)</argsstring>
        <name>contaNumeri</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>contaNumeri <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*str</parametername>
</parameternamelist>
<parameterdescription>
<para>e&apos; un puntatore a carattere </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para>la stringa non deve essere nulla </para>
</simplesect>
<simplesect kind="return"><para>restituisce il numero dei numeri presenti nella stringa </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/franc/Desktop/ESAME 1.0/ESAME 1.0/Funzioni.c" line="88" column="5" bodyfile="C:/Users/franc/Desktop/ESAME 1.0/ESAME 1.0/Funzioni.c" bodystart="88" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="_funzioni_8c_1a9d9b4cec3afa3def0a78b2fdfde0418a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int contaVocali</definition>
        <argsstring>(const char *str)</argsstring>
        <name>contaVocali</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>contaVocali <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*str</parametername>
</parameternamelist>
<parameterdescription>
<para>e&apos; un puntatore a carattere </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para>la stringa non deve essere nulla </para>
</simplesect>
<simplesect kind="return"><para>restituisce il numero di vocali presenti nella stringa </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/franc/Desktop/ESAME 1.0/ESAME 1.0/Funzioni.c" line="103" column="5" bodyfile="C:/Users/franc/Desktop/ESAME 1.0/ESAME 1.0/Funzioni.c" bodystart="103" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="_funzioni_8c_1a4df0a9304b9de6f66dc16e022fd6bdf3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void swap</definition>
        <argsstring>(Pila *a, Pila *b)</argsstring>
        <name>swap</name>
        <param>
          <type><ref refid="struct_pila" kindref="compound">Pila</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="struct_pila" kindref="compound">Pila</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>swap <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*a</parametername>
</parameternamelist>
<parameterdescription>
<para>e&apos; un puntatore alla struttura <ref refid="struct_pila" kindref="compound">Pila</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">*b</parametername>
</parameternamelist>
<parameterdescription>
<para>e&apos; un puntatore alla struttura <ref refid="struct_pila" kindref="compound">Pila</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/franc/Desktop/ESAME 1.0/ESAME 1.0/Funzioni.c" line="117" column="6" bodyfile="C:/Users/franc/Desktop/ESAME 1.0/ESAME 1.0/Funzioni.c" bodystart="117" bodyend="122"/>
        <references refid="struct_pila_1aa51f190825baa5e4b80aa3a80d06b2ce" compoundref="_pila_8h" startline="24">Pila::dato</references>
      </memberdef>
      <memberdef kind="function" id="_funzioni_8c_1a90609c92cfde3ffc9b213de5b781228c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_pila" kindref="compound">Pila</ref> *</type>
        <definition>Pila * clonaPila</definition>
        <argsstring>(const Pila *pilaOriginale)</argsstring>
        <name>clonaPila</name>
        <param>
          <type>const <ref refid="struct_pila" kindref="compound">Pila</ref> *</type>
          <declname>pilaOriginale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>clonaPila <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*pilaOriginale</parametername>
</parameternamelist>
<parameterdescription>
<para>e&apos; un puntatore alla struttura <ref refid="struct_pila" kindref="compound">Pila</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>restituisce una pila clonata a quella passata per riferimento </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/franc/Desktop/ESAME 1.0/ESAME 1.0/Funzioni.c" line="128" column="6" bodyfile="C:/Users/franc/Desktop/ESAME 1.0/ESAME 1.0/Funzioni.c" bodystart="128" bodyend="137"/>
        <references refid="_funzioni_8c_1a90609c92cfde3ffc9b213de5b781228c" compoundref="_funzioni_8c" startline="128" endline="137">clonaPila</references>
        <references refid="struct_pila_1aa51f190825baa5e4b80aa3a80d06b2ce" compoundref="_pila_8h" startline="24">Pila::dato</references>
        <references refid="struct_pila_1a1885e0e21f2563f74f2a71c5072bff21" compoundref="_pila_8h" startline="25">Pila::nextPtr</references>
      </memberdef>
      <memberdef kind="function" id="_funzioni_8c_1a2e1889b0fa0a7ab25a627c7c1135b43a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_pila" kindref="compound">Pila</ref> *</type>
        <definition>Pila * bubbleSortRicorsivo</definition>
        <argsstring>(Pila **pila)</argsstring>
        <name>bubbleSortRicorsivo</name>
        <param>
          <type><ref refid="struct_pila" kindref="compound">Pila</ref> **</type>
          <declname>pila</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>bubbleSortRicorsivo <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*pila</parametername>
</parameternamelist>
<parameterdescription>
<para>e&apos; un puntatore alla struttura <ref refid="struct_pila" kindref="compound">Pila</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para>la pila non deve essere nulla e nemmemeno l&apos;elemento successivo </para>
</simplesect>
<simplesect kind="return"><para>restituisce una nuova pila ordinata secondo una specifica relazione d&apos;ordine </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/franc/Desktop/ESAME 1.0/ESAME 1.0/Funzioni.c" line="146" column="6" bodyfile="C:/Users/franc/Desktop/ESAME 1.0/ESAME 1.0/Funzioni.c" bodystart="146" bodyend="169"/>
        <references refid="_funzioni_8c_1a2e1889b0fa0a7ab25a627c7c1135b43a" compoundref="_funzioni_8c" startline="146" endline="169">bubbleSortRicorsivo</references>
        <references refid="_funzioni_8c_1a90609c92cfde3ffc9b213de5b781228c" compoundref="_funzioni_8c" startline="128" endline="137">clonaPila</references>
        <references refid="_funzioni_8c_1a655f67b2984bff476d1f97750a5764d8" compoundref="_funzioni_8c" startline="72" endline="79">contaAlfanumerico</references>
        <references refid="_funzioni_8c_1ae386eaa89c4fb31c0159d9e2dc54c97a" compoundref="_funzioni_8c" startline="88" endline="95">contaNumeri</references>
        <references refid="_funzioni_8c_1a9d9b4cec3afa3def0a78b2fdfde0418a" compoundref="_funzioni_8c" startline="103" endline="111">contaVocali</references>
        <references refid="struct_pila_1aa51f190825baa5e4b80aa3a80d06b2ce" compoundref="_pila_8h" startline="24">Pila::dato</references>
        <references refid="struct_pila_1a1885e0e21f2563f74f2a71c5072bff21" compoundref="_pila_8h" startline="25">Pila::nextPtr</references>
        <references refid="_funzioni_8c_1a4df0a9304b9de6f66dc16e022fd6bdf3" compoundref="_funzioni_8c" startline="117" endline="122">swap</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Questo file include le funzioni di dominio. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="version"><para>1.0.0 </para>
</simplesect>
<simplesect kind="date"><para>06/07/2023 </para>
</simplesect>
<simplesect kind="authors"><para>Calabrese Lorenzo </para>
</simplesect>
<simplesect kind="authors"><para>Cappelluti Claudia Antonia </para>
</simplesect>
<simplesect kind="authors"><para>Conforti Francesco </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include&quot;<ref refid="_header_8h" kindref="compound">header.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_funzioni_8h" kindref="compound">Funzioni.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;InputOutput.h.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_pila_8h" kindref="compound">Pila.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="_funzioni_8c_1a58bad8ca508eebb0e11542f293215213" refkind="member"><highlight class="normal"><ref refid="struct_pila" kindref="compound">Pila</ref>*<sp/><ref refid="_funzioni_8c_1a58bad8ca508eebb0e11542f293215213" kindref="member">sostituisci</ref>(<ref refid="struct_pila" kindref="compound">Pila</ref>**<sp/>pila,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>elementoDaSostituire,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>nuovoElemento)<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pila" kindref="compound">Pila</ref>*<sp/>pilaModificata<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pila" kindref="compound">Pila</ref>*<sp/>nodoCorrente<sp/>=<sp/>*pila;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pila" kindref="compound">Pila</ref>*<sp/>nodoPrecedente<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>trovataOccorrenza<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(nodoCorrente<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_pila" kindref="compound">Pila</ref>*<sp/>nuovoNodo<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_pila" kindref="compound">Pila</ref>));</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(nuovoNodo-&gt;<ref refid="struct_pila_1aa51f190825baa5e4b80aa3a80d06b2ce" kindref="member">dato</ref>,<sp/>nodoCorrente-&gt;<ref refid="struct_pila_1aa51f190825baa5e4b80aa3a80d06b2ce" kindref="member">dato</ref>);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nuovoNodo-&gt;<ref refid="struct_pila_1a1885e0e21f2563f74f2a71c5072bff21" kindref="member">nextPtr</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(nodoCorrente-&gt;<ref refid="struct_pila_1aa51f190825baa5e4b80aa3a80d06b2ce" kindref="member">dato</ref>,<sp/>nuovoElemento)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;E&apos;<sp/>stata<sp/>trovata<sp/>un&apos;occorrenza!\nNessuna<sp/>operazione<sp/>effettuata\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_input_output_8c_1aa8565c0396f63828505d9beb65719849" kindref="member">gestoreScelta</ref>(*pila);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trovataOccorrenza<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(nodoCorrente-&gt;<ref refid="struct_pila_1aa51f190825baa5e4b80aa3a80d06b2ce" kindref="member">dato</ref>,<sp/>elementoDaSostituire)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(nuovoNodo-&gt;<ref refid="struct_pila_1aa51f190825baa5e4b80aa3a80d06b2ce" kindref="member">dato</ref>,<sp/>nuovoElemento);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trovataOccorrenza<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pilaModificata<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pilaModificata<sp/>=<sp/>nuovoNodo;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodoPrecedente-&gt;<ref refid="struct_pila_1a1885e0e21f2563f74f2a71c5072bff21" kindref="member">nextPtr</ref><sp/>=<sp/>nuovoNodo;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodoPrecedente<sp/>=<sp/>nuovoNodo;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodoCorrente<sp/>=<sp/>nodoCorrente-&gt;<ref refid="struct_pila_1a1885e0e21f2563f74f2a71c5072bff21" kindref="member">nextPtr</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!trovataOccorrenza)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Parola<sp/>|%s|<sp/>non<sp/>trovata!\n&quot;</highlight><highlight class="normal">,elementoDaSostituire);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_input_output_8c_1aa8565c0396f63828505d9beb65719849" kindref="member">gestoreScelta</ref>(*pila);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pilaModificata;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="_funzioni_8c_1a655f67b2984bff476d1f97750a5764d8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_funzioni_8c_1a655f67b2984bff476d1f97750a5764d8" kindref="member">contaAlfanumerico</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>str[i]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isalpha(str[i]))</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count++;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="_funzioni_8c_1ae386eaa89c4fb31c0159d9e2dc54c97a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_funzioni_8c_1ae386eaa89c4fb31c0159d9e2dc54c97a" kindref="member">contaNumeri</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>str[i]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isdigit(str[i]))</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count++;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="_funzioni_8c_1a9d9b4cec3afa3def0a78b2fdfde0418a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_funzioni_8c_1a9d9b4cec3afa3def0a78b2fdfde0418a" kindref="member">contaVocali</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>str[i]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>tolower(str[i]);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>||<sp/>c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;e&apos;</highlight><highlight class="normal"><sp/>||<sp/>c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;i&apos;</highlight><highlight class="normal"><sp/>||<sp/>c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;o&apos;</highlight><highlight class="normal"><sp/>||<sp/>c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;u&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count++;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117" refid="_funzioni_8c_1a4df0a9304b9de6f66dc16e022fd6bdf3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_funzioni_8c_1a4df0a9304b9de6f66dc16e022fd6bdf3" kindref="member">swap</ref>(<ref refid="struct_pila" kindref="compound">Pila</ref>*<sp/>a,<sp/><ref refid="struct_pila" kindref="compound">Pila</ref>*<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>temp[SIZE_PILA];</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(temp,<sp/>a-&gt;<ref refid="struct_pila_1aa51f190825baa5e4b80aa3a80d06b2ce" kindref="member">dato</ref>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(a-&gt;<ref refid="struct_pila_1aa51f190825baa5e4b80aa3a80d06b2ce" kindref="member">dato</ref>,<sp/>b-&gt;<ref refid="struct_pila_1aa51f190825baa5e4b80aa3a80d06b2ce" kindref="member">dato</ref>);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(b-&gt;<ref refid="struct_pila_1aa51f190825baa5e4b80aa3a80d06b2ce" kindref="member">dato</ref>,<sp/>temp);</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128" refid="_funzioni_8c_1a90609c92cfde3ffc9b213de5b781228c" refkind="member"><highlight class="normal"><ref refid="struct_pila" kindref="compound">Pila</ref>*<sp/><ref refid="_funzioni_8c_1a90609c92cfde3ffc9b213de5b781228c" kindref="member">clonaPila</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_pila" kindref="compound">Pila</ref>*<sp/>pilaOriginale)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pilaOriginale<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pila" kindref="compound">Pila</ref>*<sp/>nuovaPila<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_pila" kindref="compound">Pila</ref>));</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(nuovaPila-&gt;<ref refid="struct_pila_1aa51f190825baa5e4b80aa3a80d06b2ce" kindref="member">dato</ref>,<sp/>pilaOriginale-&gt;<ref refid="struct_pila_1aa51f190825baa5e4b80aa3a80d06b2ce" kindref="member">dato</ref>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>nuovaPila-&gt;<ref refid="struct_pila_1a1885e0e21f2563f74f2a71c5072bff21" kindref="member">nextPtr</ref><sp/>=<sp/><ref refid="_funzioni_8c_1a90609c92cfde3ffc9b213de5b781228c" kindref="member">clonaPila</ref>(pilaOriginale-&gt;<ref refid="struct_pila_1a1885e0e21f2563f74f2a71c5072bff21" kindref="member">nextPtr</ref>);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nuovaPila;</highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment">//Crescente</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="_funzioni_8c_1a2e1889b0fa0a7ab25a627c7c1135b43a" refkind="member"><highlight class="normal"><ref refid="struct_pila" kindref="compound">Pila</ref>*<sp/><ref refid="_funzioni_8c_1a2e1889b0fa0a7ab25a627c7c1135b43a" kindref="member">bubbleSortRicorsivo</ref>(<ref refid="struct_pila" kindref="compound">Pila</ref>**<sp/>pila)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pila<sp/>==<sp/>NULL<sp/>||<sp/>(*pila)-&gt;<ref refid="struct_pila_1a1885e0e21f2563f74f2a71c5072bff21" kindref="member">nextPtr</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_funzioni_8c_1a90609c92cfde3ffc9b213de5b781228c" kindref="member">clonaPila</ref>(*pila);<sp/></highlight><highlight class="comment">//<sp/>Clona<sp/>la<sp/>pila<sp/>originale<sp/>e<sp/>restituisce<sp/>una<sp/>nuova<sp/>pila</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pila" kindref="compound">Pila</ref>*<sp/>pilaOrdinata<sp/>=<sp/><ref refid="_funzioni_8c_1a90609c92cfde3ffc9b213de5b781228c" kindref="member">clonaPila</ref>(*pila);<sp/></highlight><highlight class="comment">//<sp/>Clona<sp/>la<sp/>pila<sp/>originale<sp/>per<sp/>creare<sp/>una<sp/>nuova<sp/>pila<sp/>ordinata</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>caratteriAlfabetici<sp/>=<sp/><ref refid="_funzioni_8c_1a655f67b2984bff476d1f97750a5764d8" kindref="member">contaAlfanumerico</ref>(pilaOrdinata-&gt;<ref refid="struct_pila_1aa51f190825baa5e4b80aa3a80d06b2ce" kindref="member">dato</ref>);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>caratteriNumerici<sp/>=<sp/><ref refid="_funzioni_8c_1ae386eaa89c4fb31c0159d9e2dc54c97a" kindref="member">contaNumeri</ref>(pilaOrdinata-&gt;<ref refid="struct_pila_1aa51f190825baa5e4b80aa3a80d06b2ce" kindref="member">dato</ref>);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>caratteriVocali<sp/>=<sp/><ref refid="_funzioni_8c_1a9d9b4cec3afa3def0a78b2fdfde0418a" kindref="member">contaVocali</ref>(pilaOrdinata-&gt;<ref refid="struct_pila_1aa51f190825baa5e4b80aa3a80d06b2ce" kindref="member">dato</ref>);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pila" kindref="compound">Pila</ref>*<sp/>current<sp/>=<sp/>pilaOrdinata;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pila" kindref="compound">Pila</ref>*<sp/>next<sp/>=<sp/>pilaOrdinata-&gt;<ref refid="struct_pila_1a1885e0e21f2563f74f2a71c5072bff21" kindref="member">nextPtr</ref>;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(caratteriAlfabetici<sp/>&gt;<sp/><ref refid="_funzioni_8c_1a655f67b2984bff476d1f97750a5764d8" kindref="member">contaAlfanumerico</ref>(next-&gt;<ref refid="struct_pila_1aa51f190825baa5e4b80aa3a80d06b2ce" kindref="member">dato</ref>)<sp/>||<sp/>(caratteriAlfabetici<sp/>==<sp/><ref refid="_funzioni_8c_1a655f67b2984bff476d1f97750a5764d8" kindref="member">contaAlfanumerico</ref>(next-&gt;<ref refid="struct_pila_1aa51f190825baa5e4b80aa3a80d06b2ce" kindref="member">dato</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>caratteriNumerici<sp/>&gt;<sp/><ref refid="_funzioni_8c_1ae386eaa89c4fb31c0159d9e2dc54c97a" kindref="member">contaNumeri</ref>(next-&gt;<ref refid="struct_pila_1aa51f190825baa5e4b80aa3a80d06b2ce" kindref="member">dato</ref>))<sp/>||</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(caratteriAlfabetici<sp/>==<sp/><ref refid="_funzioni_8c_1a655f67b2984bff476d1f97750a5764d8" kindref="member">contaAlfanumerico</ref>(next-&gt;<ref refid="struct_pila_1aa51f190825baa5e4b80aa3a80d06b2ce" kindref="member">dato</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>caratteriNumerici<sp/>==<sp/><ref refid="_funzioni_8c_1ae386eaa89c4fb31c0159d9e2dc54c97a" kindref="member">contaNumeri</ref>(next-&gt;<ref refid="struct_pila_1aa51f190825baa5e4b80aa3a80d06b2ce" kindref="member">dato</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>caratteriVocali<sp/>&gt;<sp/><ref refid="_funzioni_8c_1a9d9b4cec3afa3def0a78b2fdfde0418a" kindref="member">contaVocali</ref>(next-&gt;<ref refid="struct_pila_1aa51f190825baa5e4b80aa3a80d06b2ce" kindref="member">dato</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_funzioni_8c_1a4df0a9304b9de6f66dc16e022fd6bdf3" kindref="member">swap</ref>(current,<sp/>next);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>pilaOrdinata-&gt;<ref refid="struct_pila_1a1885e0e21f2563f74f2a71c5072bff21" kindref="member">nextPtr</ref><sp/>=<sp/><ref refid="_funzioni_8c_1a2e1889b0fa0a7ab25a627c7c1135b43a" kindref="member">bubbleSortRicorsivo</ref>(&amp;pilaOrdinata-&gt;<ref refid="struct_pila_1a1885e0e21f2563f74f2a71c5072bff21" kindref="member">nextPtr</ref>);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pilaOrdinata;</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/franc/Desktop/ESAME 1.0/ESAME 1.0/Funzioni.c"/>
  </compounddef>
</doxygen>
